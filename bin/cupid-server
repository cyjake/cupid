#!/usr/bin/env node

var express = require('express')
var exists = require('fs').existsSync
var join = require('path').join
var resolve = require('path').resolve
var error = require('../lib/utils').error
var log = require('../lib/utils').log
var program = require('commander')
var fs = require('fs')
var cupid = require('../')


var PORT = 3000

program
  .option('-p --port [port]', 'Specify the port to listen on, default to ' + PORT, parseInt, PORT)
  .parse(process.argv)

var dir = program.args[0] || ''
var planet = resolve(process.cwd(), dir)

if (!exists(join(planet, 'planet.json'))) {
  error('cannot find planet folder to serve')
  process.exit(1)
}


var app = express()

app.use(express.logger('dev'))
app.use(express.static(planet))
app.use(express.cookieParser())
app.use(express.session({ secret: 'avada kedavra' }))
app.use(express.bodyParser())

app.set('view engine', 'jade')
app.set('views', resolve(__dirname, '../views'))

var ext = join(planet, 'cupid.js')

if (exists(ext)) {
  require(ext)(app)
}

app.get('/feeds/new', function(req, res) {
  var planetPath = join(planet, 'planet.json')
  var config = require(planetPath)
  var feeds = config.feeds
  var user = req.session.user
  var feed

  for (var i = 0; i < feeds.length; i++) {
    var author = feeds[i].author

    if (author) {
      author = new cupid.User(author)
      if (author.email === user.email) feed = feeds[i]
    }
  }

  res.render('feed-new', {
    feed: feed
  })
})

app.post('/feeds', function(req, res) {
  var props = 'link author nickname'.split(' ')
  var obj = {}

  props.forEach(function(p) {
    obj[p] = req.body[p]
  })

  if (!obj.link || !/^http:\/\//.test(obj.link)) {
    return res.json(422, { message: 'invalid link' })
  }

  var planetPath = join(planet, 'planet.json')
  var config = require(planetPath)
  var feeds = config.feeds

  for (var i = 0; i < feeds.length; i++) {
    if (feeds[i].link === obj.link) {
      return res.json(409, { message: 'added already'})
    }
  }

  cupid.read([obj])
    .then(function(result) {
      var feed = {}
      var obj = result[0]
      var props = 'link title author'.split(' ')

      for (var p in obj) {
        if (props.indexOf(p) >= 0) feed[p] = obj[p]
      }
      feeds.push(feed)
      fs.writeFileSync(planetPath, JSON.stringify(config, null, '  '))
    })
    .then(function() {
      config.dir = planet
      return cupid.build(config)
    })
    .done(
      function(data) {
        return res.json(201, { message: 'created' })
      }, function(err) {
        return res.json(422, { message: err.message })
      }
    )
})

app.get('/:asset/:name', function(req, res) {
  var fpath = resolve(__dirname, '../public/', req.params.asset, req.params.name)

  if (exists(fpath)) res.sendfile(fpath)
})

app.listen(program.port)

log('server', 'listening on ' + program.port)
